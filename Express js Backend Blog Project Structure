/*Project Structure:*/

blog-backend/
│
├── controllers/
│   └── blogController.js
│
├── routes/
│   └── blogRoutes.js
│
├── models/
│   └── blogModel.js  (Optional, for MongoDB or other DB structure)
│
├── app.js
│
└── package.json

/*app.js*/

// app.js
const express = require("express");
const app = express();
const blogRoutes = require("./routes/blogRoutes");

app.use(express.json()); // Middleware for JSON parsing

// Use the blog routes
app.use("/api/blog", blogRoutes);

// Default route
app.get("/", (req, res) => {
  res.send("Welcome to the Blog API");
});

// Set the server to listen on a port
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});


/*controllers/blogController.js*/

// controllers/blogController.js

// Create a new blog
exports.createBlog = (req, res) => {
  // Logic for creating a blog entry can go here
  res.status(201).json({ message: "Blog created successfully" });
};

// Read a blog
exports.readBlog = (req, res) => {
  // Logic for reading blog entries can go here
  res.status(200).json({ message: "Blog read successfully" });
};

// Update a blog
exports.updateBlog = (req, res) => {
  // Logic for updating a blog entry can go here
  res.status(200).json({ message: "Blog updated successfully" });
};

// Delete a blog
exports.deleteBlog = (req, res) => {
  // Logic for deleting a blog entry can go here
  res.status(200).json({ message: "Blog deleted successfully" });
};


/*routes/blogRoutes.js*/

// routes/blogRoutes.js
const express = require("express");
const router = express.Router();
const blogController = require("../controllers/blogController");

// Route for creating a blog
router.post("/create-blog", blogController.createBlog);

// Route for reading a blog
router.get("/read-blog", blogController.readBlog);

// Route for updating a blog
router.put("/update-blog", blogController.updateBlog);

// Route for deleting a blog
router.delete("/delete-blog", blogController.deleteBlog);

module.exports = router;


/*(Optional) models/blogModel.js*/


// models/blogModel.js
const mongoose = require("mongoose");

const blogSchema = new mongoose.Schema({
  title: { type: String, required: true },
  content: { type: String, required: true },
  author: { type: String, required: true },
  createdAt: { type: Date, default: Date.now },
});

module.exports = mongoose.model("Blog", blogSchema);


/*Run the Project

    Start the server with node app.js.
    Use an API client (e.g., Postman) to test the following endpoints:
        POST /api/blog/create-blog
        GET /api/blog/read-blog
        PUT /api/blog/update-blog
        DELETE /api/blog/delete-blog*/
